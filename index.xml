<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog</title>
    <link>http://shidetake.com/</link>
    <description>Recent content on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Nov 2017 23:11:02 +0900</lastBuildDate>
    
	<atom:link href="http://shidetake.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>マンション付属の光回線が早くなった話</title>
      <link>http://shidetake.com/ebroad/</link>
      <pubDate>Wed, 15 Nov 2017 23:11:02 +0900</pubDate>
      
      <guid>http://shidetake.com/ebroad/</guid>
      <description>&lt;p&gt;自宅の光回線が遅くて、&lt;a href=&#34;../speedtest/&#34;&gt;スピードテストを自動実行するスクリプトで現状把握してみるといった内容の記事&lt;/a&gt;を書いた。
その後の話。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>WindowsでもLinuxでも動くMakefileを書く</title>
      <link>http://shidetake.com/make_win/</link>
      <pubDate>Sun, 05 Nov 2017 08:38:17 +0900</pubDate>
      
      <guid>http://shidetake.com/make_win/</guid>
      <description>&lt;p&gt;シェルのコマンドが異なるので、両方に対応するのは意外とめんどくさい。
今回はシンボリックリンクを作成するコマンドを例にして説明する。&lt;/p&gt;

&lt;p&gt;Windowsの&lt;code&gt;make&lt;/code&gt;はMinGWのものを想定している。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gitのdiffをvimdiffで見る</title>
      <link>http://shidetake.com/git_difftool/</link>
      <pubDate>Thu, 26 Oct 2017 23:34:29 +0900</pubDate>
      
      <guid>http://shidetake.com/git_difftool/</guid>
      <description>&lt;p&gt;少し前まで、&lt;code&gt;git&lt;/code&gt;のdiffに&lt;code&gt;vimdiff&lt;/code&gt;を使う場合、&lt;code&gt;git_diff_wrapper&lt;/code&gt;なるファイルを用意して、
&lt;code&gt;.gitconfig&lt;/code&gt;の&lt;code&gt;[diff]&lt;/code&gt;セクションに&lt;code&gt;external = git_diff_wrapper&lt;/code&gt;とするのが主流だった（と思っている）。&lt;/p&gt;

&lt;p&gt;今、各種dotfileを見直している中で、このダサいやり方を改善できないか調べたところ、
今の主流は&lt;code&gt;difftool&lt;/code&gt;を使うやり方のようなので、乗り換えた。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>スピードテストを定期的に実行して回線速度の推移を見る</title>
      <link>http://shidetake.com/speedtest/</link>
      <pubDate>Mon, 16 Oct 2017 22:43:05 +0900</pubDate>
      
      <guid>http://shidetake.com/speedtest/</guid>
      <description>&lt;p&gt;自宅の回線速度が遅いので、なんとか改善できないか考えている。
まずは、現状把握ということで、スピードテストを実施した。
常に遅いのか、時間によって遅いのかなどがわかれば改善の手がかりになるかもしれないと考え、
cron定期的に実行してくれるようにした。&lt;/p&gt;

&lt;p&gt;Raspberry Piで動作する。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ubuntu 16.04にmysqlをインストールする</title>
      <link>http://shidetake.com/mysql_install/</link>
      <pubDate>Sun, 01 Oct 2017 22:27:25 +0900</pubDate>
      
      <guid>http://shidetake.com/mysql_install/</guid>
      <description>&lt;p&gt;aptで適当にインストールすれば使えると思っていたが、意外と手間取ったので、手順を書いておく。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Raspberry PiでSystemdを使ってdasherをサービス化</title>
      <link>http://shidetake.com/dasher_systemd/</link>
      <pubDate>Tue, 26 Sep 2017 23:42:10 +0900</pubDate>
      
      <guid>http://shidetake.com/dasher_systemd/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../dash_button&#34;&gt;Amazon Dash Buttonを使ってLINEに通知する方法&lt;/a&gt;を以前書いた。
記事には記載していないが、このときは、init.dを使って自動起動するように設定していた。&lt;/p&gt;

&lt;p&gt;最近はinit.dは古くて、Systemdが推奨されているようなので、これに書き換えることにした。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DDNSでLANの外から自宅のRaspberry PiにSSH接続する</title>
      <link>http://shidetake.com/ddns/</link>
      <pubDate>Mon, 18 Sep 2017 21:51:18 +0900</pubDate>
      
      <guid>http://shidetake.com/ddns/</guid>
      <description>&lt;p&gt;普通のインターネット回線では、グローバルIPが定期的に変わってしまうため、
自宅に置いたRaspberry Piなんかをサーバー代わりに使うには不便。&lt;/p&gt;

&lt;p&gt;かといって、固定グローバルIPアドレスを貰うには月1000円くらい払う必要がある。&lt;/p&gt;

&lt;p&gt;そこで、Dynamic DNS (DDNS) というサービスを利用することにする。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>株価チャートからトレンドラインを引く 1</title>
      <link>http://shidetake.com/stock_trendline_1/</link>
      <pubDate>Sun, 17 Sep 2017 16:36:18 +0000</pubDate>
      
      <guid>http://shidetake.com/stock_trendline_1/</guid>
      <description>&lt;p&gt;以前、&lt;a href=&#34;../google_finance_api/&#34;&gt;Google Finance APIにより株価を取得する方法&lt;/a&gt;を書いた。
このデータからトレンドラインを引くスクリプトを作ろうと思う。&lt;/p&gt;

&lt;p&gt;まずは、トレンドラインを引くためのポイントを選択する。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Google Finance APIを使って株価チャートを作成</title>
      <link>http://shidetake.com/google_finance_api/</link>
      <pubDate>Mon, 04 Sep 2017 23:14:36 +0000</pubDate>
      
      <guid>http://shidetake.com/google_finance_api/</guid>
      <description>&lt;p&gt;株を買うかどうか判断するために株価チャートに補助線を書いたりする手法があるらしい。
手軽に補助線（トレンドラインと呼ぶらしい）を引いてくれるスクリプトでも作ろうかと思い、
まずは普通の株価チャートを描いてみた。&lt;/p&gt;

&lt;p&gt;そのへんに落ちてるアプリでもできそうだけど、最終的に買いかどうか判断させたり、
色々自由にカスタマイズするには自分で作ったほうがいいかなと。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IIJmioの追加クーポンをLINE botに買ってもらう</title>
      <link>http://shidetake.com/iij_coupon/</link>
      <pubDate>Sun, 03 Sep 2017 10:27:20 +0000</pubDate>
      
      <guid>http://shidetake.com/iij_coupon/</guid>
      <description>&lt;p&gt;IIJmioにはIIJmioクーポンスイッチというiPhoneアプリが用意されているが、
残りの通信量（IIJではクーポンと呼ぶ）を見ることはできても、追加購入することができない。
購入はブラウザから。&lt;/p&gt;

&lt;p&gt;不便なのでLINE botに買ってもらうことにした。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IFTTTとGoogle Photoを連携するとブログ用の画像準備がはかどる</title>
      <link>http://shidetake.com/blog_img/</link>
      <pubDate>Mon, 21 Aug 2017 22:44:54 +0000</pubDate>
      
      <guid>http://shidetake.com/blog_img/</guid>
      <description>&lt;p&gt;ブログに貼る画像置き場として、Google Photoを選んだ。
github-pageでホスティングしているのだが、画像をアップするのはイマイチかなと。
容量制限はないものの、1GBまでを推奨しているらしいし。&lt;/p&gt;

&lt;p&gt;というわけで、Google Photoの画像を&lt;strong&gt;簡単に&lt;/strong&gt;直接ブログに貼り付ける方法を模索していたが、
IFTTTを使って直リンクアドレスをメールしてもらうのが一番簡単だった。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iPadをウェブカメラ化してiCamSourceと連携</title>
      <link>http://shidetake.com/icam/</link>
      <pubDate>Thu, 17 Aug 2017 17:14:33 +0000</pubDate>
      
      <guid>http://shidetake.com/icam/</guid>
      <description>&lt;p&gt;iCamを使って外出先から部屋にいる犬の様子を見たいが、MBAのカメラ1つじゃ視野が狭い。
ということで、部屋に置いているiPadのカメラの映像も同時に見れるようにした。&lt;/p&gt;

&lt;p&gt;使わなくなった古いiPhoneを使ってもよい。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>テレビのアンテナ線を無線化する</title>
      <link>http://shidetake.com/wireless_tv/</link>
      <pubDate>Thu, 10 Aug 2017 22:26:23 +0000</pubDate>
      
      <guid>http://shidetake.com/wireless_tv/</guid>
      <description>&lt;p&gt;テレビ端子がイマイチな場所にあって、テレビを置く位置が限られてしまうので無線化を考えた。
マンションなのでアンテナ設置など大掛かりな方法は除いて、
ざっと調べたところ、以下の方法がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;室内アンテナを設置する&lt;/li&gt;
&lt;li&gt;PS4とnasneを使う方法&lt;/li&gt;
&lt;li&gt;Apple TVとピクセラのワイヤレステレビチューナーを使う方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3つ目の案を採用することにした。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Picasa APIを使ってGoogle Photoからデジカメ写真だけを取得 2</title>
      <link>http://shidetake.com/google_photo_api_2/</link>
      <pubDate>Tue, 01 Aug 2017 22:41:29 +0000</pubDate>
      
      <guid>http://shidetake.com/google_photo_api_2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../google_photo_api_1/&#34;&gt;前回&lt;/a&gt;の続き。
今回は任意のアルバムから写真の情報を取得する。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Picasa APIを使ってGoogle Photoからデジカメ写真だけを取得 1</title>
      <link>http://shidetake.com/google_photo_api_1/</link>
      <pubDate>Sun, 30 Jul 2017 22:56:40 +0000</pubDate>
      
      <guid>http://shidetake.com/google_photo_api_1/</guid>
      <description>&lt;p&gt;Google Photoの検索では、Exif情報の撮影機器のモデル名をキーにすることができないらしい。
あるデジカメで撮った写真だけを抽出するために試行錯誤した結果、
PicasaのAPIを使うことで実現できたので、そのやり方を記す。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HandBrakeCLIによるDVDリッピング 3</title>
      <link>http://shidetake.com/ripping_3/</link>
      <pubDate>Wed, 19 Jul 2017 22:36:23 +0900</pubDate>
      
      <guid>http://shidetake.com/ripping_3/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../ripping_2/&#34;&gt;前回&lt;/a&gt;からの続き。
これまではisoファイルからリッピングする形だったが、DVDドライブから直接リッピングする。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HandBrakeCLIによるDVDリッピング 2</title>
      <link>http://shidetake.com/ripping_2/</link>
      <pubDate>Mon, 10 Jul 2017 22:41:58 +0900</pubDate>
      
      <guid>http://shidetake.com/ripping_2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../ripping_1/&#34;&gt;前回&lt;/a&gt;からの続き。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HandBrakeCLIによるDVDリッピング 1</title>
      <link>http://shidetake.com/ripping_1/</link>
      <pubDate>Mon, 03 Jul 2017 22:08:55 +0900</pubDate>
      
      <guid>http://shidetake.com/ripping_1/</guid>
      <description>&lt;p&gt;DVDのリッピングというのは、設定が異常に多い。&lt;/p&gt;

&lt;p&gt;まず大きいところで、コーデック。汎用性の高いH.264にするのか、先を見越してH.265にするのか。
コンテナはどうする？mp4なんかはよく見るし汎用性ありそう。でも字幕や音声を切り替えるならmkvを選んだ方がいい。
フレームレートは？ノイズ除去フィルタの種類や強さも決めなきゃ。&lt;/p&gt;

&lt;p&gt;と言った具合に無数に決めることがあり、それをいちいち設定してたら何十枚もあるDVDをリッピングするのにどれだけ時間がかかるかわからない。
しかも、今回設定した内容を次に覚えてないとまたノイズフィルタのかかり具合を見極める作業を繰り返すことになる。&lt;/p&gt;

&lt;p&gt;そういった面倒なことを避けるために、DVDをドライブに挿入したら、あとはコマンドを一発送るだけでいつもの設定でリッピングできるようにした。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RubyでGmail本文を取得する 2</title>
      <link>http://shidetake.com/gmail_api_2/</link>
      <pubDate>Mon, 26 Jun 2017 22:44:57 +0900</pubDate>
      
      <guid>http://shidetake.com/gmail_api_2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../gmail_api_1/&#34;&gt;前回&lt;/a&gt;はアクセストークンを取得して、メール本文を取得することに成功した。
ただしアクセストークンには期限があり、取得しなおさなくてはならない。
今回はリフレッシュトークンを使うことで、これを解決する。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RubyでGmail本文を取得する 1</title>
      <link>http://shidetake.com/gmail_api_1/</link>
      <pubDate>Tue, 20 Jun 2017 22:55:21 +0900</pubDate>
      
      <guid>http://shidetake.com/gmail_api_1/</guid>
      <description>&lt;p&gt;GmailのAPIをRubyで使う方法を何回かに分けて書く。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KindleのハイライトをLINEに通知する 4</title>
      <link>http://shidetake.com/line_highlights_4/</link>
      <pubDate>Sun, 18 Jun 2017 14:33:41 +0900</pubDate>
      
      <guid>http://shidetake.com/line_highlights_4/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../line_highlights_3/&#34;&gt;前回&lt;/a&gt;はLINEのBOTにメッセージを送ることで、
ハイライトを取得して返信してくれるようにした。
現状では、設定したページ数だけスクレイピングして、全てのハイライトを返信することになっているので、
何度も同じハイライトが送られてきてしまう。
今回は最新のハイライトだけを返信するようにする。&lt;/p&gt;

&lt;p&gt;今回でこのシリーズは最後。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KindleのハイライトをLINEに通知する 3</title>
      <link>http://shidetake.com/line_highlights_3/</link>
      <pubDate>Wed, 07 Jun 2017 22:27:01 +0900</pubDate>
      
      <guid>http://shidetake.com/line_highlights_3/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../line_highlights_2/&#34;&gt;前回&lt;/a&gt;はサーバで起動してLINE通知するところまで。
このままだとサーバ側で手動で起動しないといけない。これを解決する。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KindleのハイライトをLINEに通知する 2</title>
      <link>http://shidetake.com/line_highlights_2/</link>
      <pubDate>Sun, 04 Jun 2017 22:44:34 +0900</pubDate>
      
      <guid>http://shidetake.com/line_highlights_2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../line_highlights_1/&#34;&gt;前回&lt;/a&gt;はクローラーを作成してハイライトを取得するところまでだった。
今回はサーバで起動してLINE通知するところまでを作る。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>KindleのハイライトをLINEに通知する 1</title>
      <link>http://shidetake.com/line_highlights_1/</link>
      <pubDate>Sat, 27 May 2017 13:08:32 +0900</pubDate>
      
      <guid>http://shidetake.com/line_highlights_1/</guid>
      <description>&lt;p&gt;読書メモのためにハイライトした文章をコピペできる形にしたい。
KindleにはハイライトをメールやTwitterでシェアする機能があるが、これはアクションが増えて読書を妨げるので使いたくない。&lt;/p&gt;

&lt;p&gt;ハイライトした内容は &lt;a href=&#34;https://kindle.amazon.co.jp/your_highlights&#34;&gt;https://kindle.amazon.co.jp/your_highlights&lt;/a&gt; で見えるので、これを取得して通知するクローラーを作ればよい。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Time Machineの容量制限</title>
      <link>http://shidetake.com/time_capsule/</link>
      <pubDate>Sun, 14 May 2017 21:01:17 +0900</pubDate>
      
      <guid>http://shidetake.com/time_capsule/</guid>
      <description>&lt;p&gt;Time Capsuleをバックアップ用途だけでなく、NASとしても使いたい。
Time Machineを使うと、容量がいっぱいになるまでバックアップを取り続けてしまうので、
何らかの方法で容量を制限する必要がある。&lt;/p&gt;

&lt;p&gt;パーティションを切って、バックアップ領域とデータ領域に分けるという方法が主流のようだ。
ただ、裏ワザ的な使い方のためあまり推奨しないという意見も多い。&lt;/p&gt;

&lt;p&gt;そこで、別の方法を採用した。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Amazon Dash ButtonからLINE通知</title>
      <link>http://shidetake.com/dash_button/</link>
      <pubDate>Thu, 11 May 2017 22:31:20 +0900</pubDate>
      
      <guid>http://shidetake.com/dash_button/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LINE BOTでPUSH通知する</title>
      <link>http://shidetake.com/line_push/</link>
      <pubDate>Mon, 17 Apr 2017 23:11:57 +0900</pubDate>
      
      <guid>http://shidetake.com/line_push/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cheat_sheet</title>
      <link>http://shidetake.com/playground/cheat_sheet/</link>
      <pubDate>Thu, 30 Mar 2017 23:30:11 +0900</pubDate>
      
      <guid>http://shidetake.com/playground/cheat_sheet/</guid>
      <description>&lt;p&gt;要約&lt;br /&gt;
チートシート&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>